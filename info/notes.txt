MySQL Stored Procedure Example:

--the following example will check if the given username exists in the __admin table
--statements after double dash(--) are comments

DROP PROCEDURE IF EXISTS IS_ADMIN;	--if there is an existing procedure with that name, drop it

DELIMITER $$	--change delimiter to $$ so using semi-colon(;) in the procedure body won't be executed

CREATE PROCEDURE IS_ADMIN(username VARCHAR(40))	--create a procedure named IS_ADMIN with parameter username with datatype VARCHAR(40)

BEGIN	--start the statements to be executed if this function is called

	DECLARE _exists BOOLEAN DEFAULT FALSE; --declare a boolean variable with FALSE as initial value

	SELECT COUNT(*) > 0 INTO _exists FROM __admin WHERE username = _username; --count all admin where username is equal to the given username, then check if it is greater than 0, if true then _exists = true, else _exists = false
	
	IF _exists THEN	--if exists is true then
	
		SELECT CONCAT("The username : ", _username," is existing") as message;
		//you can update or delete here if you want to
	
	ELSE
	
		SELECT CONCAT("There is no admin with this username : ", _username) as message;
	
	END IF;	--end if statement

END $$	--end procedure body then execute

DELIMITER ; --revert the delimiter to semi-colon

CALL IS_ADMIN('raven');	--try it :)


why stored procs? they are faster than a normal query, you can pack a lot of statements in one single query, useful in data integrity, it is used in the industry
where will we use this? all transaction that needs at least 2 queries